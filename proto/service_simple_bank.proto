syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_login_user.proto";
import "rpc_update_user.proto";

import "protoc-gen-openapiv2/options/annotations.proto";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Simple Bank API"
        version: "1.0.1"
        contact: {
            name: "Corey"
            url: "github.com/corey888773/golang-course"
            email: "piotrgasiorek773@gmail.com"
        }
    }
};

option go_package = "github.com/corey888773/golang-course/pb";

service SimpleBank {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse){
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this api to register a new user";
            summary: "Create User API";
        };
    }
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse){
        option (google.api.http) = {
            patch: "/v1/update_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this api to update an existing user";
            summary: "Update User API";
        };
    }
    rpc LoginUser(LoginUserRequest) returns (LoginUserResponse){
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this api to login to existing account, get a accessToken, refreshToken and register a session";
            summary: "Login User API";
        };
    };
}